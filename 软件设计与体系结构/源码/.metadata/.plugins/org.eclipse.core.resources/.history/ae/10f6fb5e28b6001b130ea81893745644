abstract class Bread{
	//计算面包的价格
	public abstract double cost();  
	//获取面包的描述
	public abstract String getDescription();  
}

/*
 * 日式面包
 */
class JapaneseBread extends Bread {

	@Override
	public double cost() {
		return 12;
	}

	@Override
	public String getDescription() {
		return "日式面包";
	}
	
}

/*
 * 法式面包
 */
class FrenchBread extends Bread {

	@Override
	public double cost() {
		return 10;
	}

	@Override
	public String getDescription() {
		return "法式面包";
	}
	
}

/*
 * 美式面包
 */
class AmericanBread extends Bread {

	@Override
	public double cost() {
		return 15;
	}

	@Override
	public String getDescription() {
		return "美式面包";
	}
	
}

/*
 * 装饰器接口
 */
abstract class BreadDecorator extends Bread{
	public Bread bread;
}

/*
 * 芝麻 sesame
 */
class Sesame extends BreadDecorator {
	public Sesame(Bread bread) {
		this.bread = bread;
	}

	@Override
	public double cost() {
		return bread.cost() + 1.5;
	}

	@Override
	public String getDescription() {
		return bread.getDescription() + "芝麻馅";
	}
	
}

/*
 *花生 peanut
 */
class Peanut extends BreadDecorator {
	public Peanut(Bread bread) {
		this.bread = bread;
	}

	@Override
	public double cost() {
		return bread.cost() + 4;
	}

	@Override
	public String getDescription() {
		return bread.getDescription() + "花生馅";
	}
	
}

/*
 * 奶黄CreamYellow
 */
class CreamYellow extends BreadDecorator {
	public CreamYellow(Bread bread) {
		this.bread = bread;
	}

	@Override
	public double cost() {
		return bread.cost() + 1;
	}

	@Override
	public String getDescription() {
		return bread.getDescription() + "奶黄馅";
	}
	
}

/*
 * 奶椰 MilkCoconut
 */
class MilkCoconut extends BreadDecorator {
	public MilkCoconut(Bread bread) {
		this.bread = bread;
	}

	@Override
	public double cost() {
		return bread.cost() + 3;
	}

	@Override
	public String getDescription() {
		return bread.getDescription() + "奶椰馅";
	}
	
}

/*
 * 奶酥 Pastry
 */
class Pastry extends BreadDecorator {
	public Pastry(Bread bread) {
		this.bread = bread;
	}

	@Override
	public double cost() {
		return bread.cost() + 2;
	}

	@Override
	public String getDescription() {
		return bread.getDescription() + "奶酥馅";
	}
	
}

/*
 *提子吉士 Tizijishi
 */
class Tizijishi extends BreadDecorator {
	public Tizijishi(Bread bread) {
		this.bread = bread;
	}

	@Override
	public double cost() {
		return bread.cost() + 5;
	}

	@Override
	public String getDescription() {
		return bread.getDescription() + "提子吉士馅";
	}
	
}


public class BreadTest {

	public static void main(String[] args) {
		// 日式面包芝麻馅的价格：13.5
		Bread bread = new JapaneseBread();
		BreadDecorator breadDecorator = new Sesame(bread);
		System.out.println(breadDecorator.getDescription() + "的价格：" + breadDecorator.cost());
		
		Bread bread2 = new AmericanBread();
		BreadDecorator bDecorator = new MilkCoconut(bread);
		
		
		
	}

}
